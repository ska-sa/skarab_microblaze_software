/*
 * LLDP.h
 *
 *  Created on: 28 Jun 2017
 *      Author: sinethemba
 */

#ifndef SRC_LLDP_H_
#define SRC_LLDP_H_

#include <xil_types.h>
#include <xstatus.h>

#include "eth.h"

#ifdef __cplusplus
extern "C" {
#endif

//DEFINE INTERFACE NAMES
#define LLDP_ONE_GBE_INTERFACE         "I/F-01GBE-00"
#define LLDP_FORTY_GBE_INTERFACE_0     "I/F-40GBE-01"
#define LLDP_FORTY_GBE_INTERFACE_1     "I/F-40GBE-02"
#define LLDP_FORTY_GBE_INTERFACE_2     "I/F-40GBE-03"
#define LLDP_FORTY_GBE_INTERFACE_3     "I/F-40GBE-04"
#define LLDP_FORTY_GBE_INTERFACE_x     "I/F-40GBE-xx"
#define LLDP_HOSTNAME                  "skarab"

/*link custom return values */
#define LLDP_RETURN_FAIL     XST_FAILURE
#define LLDP_RETURN_OK       XST_SUCCESS
#define LLDP_RETURN_INVALID  XST_FAILURE

/*lldp packet offsets */
#define LLDP_CHASSIS_ID_TLV_TYPE_OFFSET          (ETH_FRAME_TYPE_OFFSET + ETH_FRAME_TYPE_LEN) //14
#define LLDP_CHASSIS_ID_TLV_TYPE_LEN             1
#define LLDP_CHASSIS_ID_TLV_LEN_OFFSET           (LLDP_CHASSIS_ID_TLV_TYPE_OFFSET + LLDP_CHASSIS_ID_TLV_TYPE_LEN) // 15
#define LLDP_CHASSIS_ID_TLV_LEN_LEN              1
#define LLDP_CHASSIS_ID_TLV_OFFSET               (LLDP_CHASSIS_ID_TLV_LEN_OFFSET + LLDP_CHASSIS_ID_TLV_LEN_LEN) // 16
#define LLDP_CHASSIS_ID_TLV_LEN                  7

#define LLDP_PORT_ID_TLV_TYPE_OFFSET             (LLDP_CHASSIS_ID_TLV_OFFSET + LLDP_CHASSIS_ID_TLV_LEN) //23
#define LLDP_PORT_ID_TLV_TYPE_LEN                1
#define LLDP_PORT_ID_TLV_LEN_OFFSET              (LLDP_PORT_ID_TLV_TYPE_OFFSET + LLDP_PORT_ID_TLV_TYPE_LEN)//24
#define LLDP_PORT_ID_TLV_LEN_LEN                 1
#define LLDP_PORT_ID_TLV_OFFSET                  (LLDP_PORT_ID_TLV_LEN_OFFSET + LLDP_PORT_ID_TLV_LEN_LEN) //25
#define LLDP_PORT_ID_TLV_LEN                     7

#define LLDP_TTL_TLV_TYPE_OFFSET                 (LLDP_PORT_ID_TLV_OFFSET + LLDP_PORT_ID_TLV_LEN) //31
#define LLDP_TTL_TLV_TYPE_LEN                    1
#define LLDP_TTL_TLV_LEN_OFFSET                  (LLDP_TTL_TLV_TYPE_OFFSET + LLDP_TTL_TLV_TYPE_LEN) //32
#define LLDP_TTL_TLV_LEN_LEN                     1
#define LLDP_TTL_TLV_OFFSET                      (LLDP_TTL_TLV_LEN_OFFSET + LLDP_TTL_TLV_LEN_LEN) //33
#define LLDP_TTL_TLV_LEN                         2

#define LLDP_PORT_DESCR_TLV_TYPE_OFFSET          (LLDP_TTL_TLV_OFFSET + LLDP_TTL_TLV_LEN) //35
#define LLDP_PORT_DESCR_TLV_TYPE_LEN             1
#define LLDP_PORT_DESCR_TLV_LEN_OFFSET           (LLDP_PORT_DESCR_TLV_TYPE_OFFSET + LLDP_PORT_DESCR_TLV_TYPE_LEN) //36
#define LLDP_PORT_DESCR_TLV_LEN_LEN              1
#define LLDP_PORT_DESCR_TLV_OFFSET               (LLDP_PORT_DESCR_TLV_LEN_OFFSET + LLDP_PORT_DESCR_TLV_LEN_LEN) //37
#define LLDP_PORT_DESCR_TLV_LEN                  12

#define LLDP_SYSTEM_NAME_TLV_TYPE_OFFSET         (LLDP_PORT_DESCR_TLV_OFFSET + LLDP_PORT_DESCR_TLV_LEN) //49
#define LLDP_SYSTEM_NAME_TLV_TYPE_LEN            1
#define LLDP_SYSTEM_NAME_TLV_LEN_OFFSET          (LLDP_SYSTEM_NAME_TLV_TYPE_OFFSET + LLDP_SYSTEM_NAME_TLV_TYPE_LEN) //50
#define LLDP_SYSTEM_NAME_TLV_LEN_LEN             1
#define LLDP_SYSTEM_NAME_TLV_OFFSET              (LLDP_SYSTEM_NAME_TLV_LEN_OFFSET + LLDP_SYSTEM_NAME_TLV_LEN_LEN) //51
#define LLDP_SYSTEM_NAME_TLV_LEN                 12

#define LLDP_SYSTEM_DESCR_TLV_TYPE_OFFSET        (LLDP_SYSTEM_NAME_TLV_OFFSET + LLDP_SYSTEM_NAME_TLV_LEN) //63
#define LLDP_SYSTEM_DESCR_TLV_TYPE_LEN           1
#define LLDP_SYSTEM_DESCR_TLV_LEN_OFFSET         (LLDP_SYSTEM_DESCR_TLV_TYPE_OFFSET + LLDP_SYSTEM_DESCR_TLV_TYPE_LEN) //64
#define LLDP_SYSTEM_DESCR_TLV_LEN_LEN            1
#define LLDP_SYSTEM_DESCR_TLV_OFFSET             (LLDP_SYSTEM_DESCR_TLV_LEN_OFFSET + LLDP_SYSTEM_DESCR_TLV_LEN_LEN) //65
#define LLDP_SYSTEM_DESCR_TLV_LEN                3  // Can either be TLF or BSP (TOOLFLOW OR BOARD SUPPORT PACKAGE)

#define LLDP_MANAGEMENT_ADDRESS_TLV_TYPE_OFFSET  (LLDP_SYSTEM_DESCR_TLV_OFFSET + LLDP_SYSTEM_DESCR_TLV_LEN) //68
#define LLDP_MANAGEMENT_ADDRESS_TLV_TYPE_LEN     1
#define LLDP_MANAGEMENT_ADDRESS_TLV_LEN_OFFSET   (LLDP_MANAGEMENT_ADDRESS_TLV_TYPE_OFFSET + LLDP_MANAGEMENT_ADDRESS_TLV_TYPE_LEN) //69
#define LLDP_MANAGEMENT_ADDRESS_TLV_LEN_LEN      1
#define LLDP_MANAGEMENT_ADDRESS_TLV_OFFSET       (LLDP_MANAGEMENT_ADDRESS_TLV_LEN_OFFSET + LLDP_MANAGEMENT_ADDRESS_TLV_LEN_LEN) //70
#define LLDP_MANAGEMENT_ADDRESS_TLV_LEN          12 

#define LLDP_END_OF_LLDPDU_TLV_TYPE_OFFSET       (LLDP_MANAGEMENT_ADDRESS_TLV_OFFSET + LLDP_MANAGEMENT_ADDRESS_TLV_LEN) // 75
#define LLDP_END_OF_LLDPDU_TLV_TYPE_LEN          1
#define LLDP_END_OF_LLDPDU_TLV_LEN_OFFSET        (LLDP_END_OF_LLDPDU_TLV_TYPE_OFFSET + LLDP_END_OF_LLDPDU_TLV_TYPE_LEN) //76
#define LLDP_END_OF_LLDPDU_TLV_LEN_LEN           1
#define LLDP_END_OF_LLDPDU_TLV_OFFSET            (LLDP_END_OF_LLDPDU_TLV_LEN_OFFSET + LLDP_END_OF_LLDPDU_TLV_LEN_LEN) //77

#define LLDP_MIN_BUFFER_SIZE    82
#define LLDP_MAX_BUFFER_SIZE    1024
volatile u8 uIPAddr[4];  // for IP address before dot notation 
volatile char pIPBuffer[15]; // for IP address string in dot notation 

enum LLDP_TLV_TYPE {

  /* start to mandatory TLV */
  LLDP_END_OF_LLDPDU_TLV = 0,
  LLDP_CHASSIS_ID_TLV = 2,
  LLPD_PORT_ID_TLV = 4,
  LLDP_TTL_TLV = 6,
  /* end of mandatory TLV */

  /* start of optional TLV */
  LLDP_PORT_DESC_TLV = 8,
  LLDP_SYSTEM_NAME_TLV = 10,
  LLDP_SYSTEM_DESCR_TLV = 12,
  LLDP_MANAGEMENT_ADDRESS_TLV = 16,

};

enum LLDP_CHASSIS_ID_SUBTYPE {
  LLDP_CHASSIS_ID_MAC_ADDRESS = 4
};

enum LLDP_PORT_ID_SUBTYPE {
  LLDP_PORT_ID_INTERFACE_NAME = 5
};

enum LLDP_MANAGEMENT_ADDRESS_SUBTYPE {
  LLDP_MANAGEMENT_ADDRESS_IP_ADDRESS = 1
};
int uLLDPBuildPacket(u8 uId, u8 *pTransmitBuffer, u32 *uResponseLength);
int uIPToString(char* pIPBuffer, u8* pIPAddr);
void reverse(char *str, int len);
int u8ToStr(u8 x, char *str, int d);


#ifdef __cplusplus
}
#endif
#endif /* SRC_LLDP_H_ */

